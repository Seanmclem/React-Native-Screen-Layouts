{"version":3,"file":"react-native-screen-layouts.cjs.production.min.js","sources":["../src/screen-layouts/NoScroll_KeyboardAvoid.tsx","../src/screen-layouts/NoScroll_YesNav_KeyboardAvoid.tsx","../src/screen-layouts/YesScroll_YesNav_BottmButtons_KeyboardAvoid.tsx","../src/screen-layouts/YesScroll_YesNav_KeyboardAvoid.tsx","../src/screen-layouts/NoNav_NoScroll_KeyboardAvoid.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { KeyboardAvoidingView, Platform, SafeAreaView } from 'react-native';\nimport styled from 'styled-components/native';\n\ninterface NoScrollKeyboardAvoidProps {\n  children?: React.ReactNode;\n  topColor?: string;\n  bottomColor?: string;\n}\n\nexport const NoScrollKeyboardAvoid: React.FC<NoScrollKeyboardAvoidProps> = ({\n  children,\n  topColor,\n  bottomColor,\n}) => {\n  return (\n    <KeyboardAvoidingViewContainer\n      nativeID=\"NoScrollKeyboardAvoid\"\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <SafeAreaView\n        style={{ flex: 0, backgroundColor: topColor || 'transparent' }}\n      />\n      <SafeAreaViewContainer bottomColor={bottomColor}>\n        {children}\n      </SafeAreaViewContainer>\n    </KeyboardAvoidingViewContainer>\n  );\n};\n\nconst KeyboardAvoidingViewContainer = styled(KeyboardAvoidingView)`\n  height: 100%;\n`;\n\nconst SafeAreaViewContainer = styled(SafeAreaView)<{ bottomColor?: string }>`\n  height: 100%;\n  flex: 1;\n  background-color: ${({ bottomColor }) =>\n    bottomColor ? bottomColor : 'transparent'};\n`;\n","import React from 'react';\nimport { KeyboardAvoidingView, Platform, SafeAreaView } from 'react-native';\nimport styled from 'styled-components/native';\n// import { View } from \"../components/Themed\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { StatusBar } from 'react-native';\n\ninterface NoScrollYesNavKeyboardAvoidProps {\n  children?: React.ReactNode;\n}\n\nexport const NoScrollYesNavKeyboardAvoid: React.FC<NoScrollYesNavKeyboardAvoidProps> = ({\n  children,\n}) => {\n  const headerHeight = useHeaderHeight();\n  const KEYBOARD_VERTICAL_OFFSET =\n    headerHeight + (StatusBar.currentHeight || 0);\n\n  return (\n    <KeyboardAvoidingViewContainer\n      nativeID=\"NoScrollKeyboardAvoid\"\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET}\n    >\n      <SafeAreaViewContainer>{children}</SafeAreaViewContainer>\n    </KeyboardAvoidingViewContainer>\n  );\n};\n\nconst KeyboardAvoidingViewContainer = styled(KeyboardAvoidingView)`\n  height: 100%;\n`;\n\nconst SafeAreaViewContainer = styled(SafeAreaView)`\n  height: 100%;\n`;\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n} from 'react-native';\nimport styled from 'styled-components/native';\n// import { View } from \"../components/Themed\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { StatusBar } from 'react-native';\n\ninterface YesScrollYesNavBottomButtonsKeyboardAvoidProps {\n  children?: React.ReactNode;\n  bottomFixed?: React.ReactNode;\n}\n\nexport const YesScrollYesNavBottomButtonsKeyboardAvoid: React.FC<YesScrollYesNavBottomButtonsKeyboardAvoidProps> = ({\n  children,\n  bottomFixed,\n}) => {\n  const headerHeight = useHeaderHeight();\n  const KEYBOARD_VERTICAL_OFFSET =\n    headerHeight + (StatusBar.currentHeight || 0);\n\n  return (\n    <KeyboardAvoidingViewContainer\n      nativeID=\"NoScrollKeyboardAvoid\"\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET}\n    >\n      <SafeAreaViewContainer>\n        <ScrollViewContainer contentContainerStyle={{ flexGrow: 1 }}>\n          {children}\n        </ScrollViewContainer>\n      </SafeAreaViewContainer>\n      {bottomFixed}\n    </KeyboardAvoidingViewContainer>\n  );\n};\n\nconst KeyboardAvoidingViewContainer = styled(KeyboardAvoidingView)`\n  height: 100%;\n`;\n\nconst SafeAreaViewContainer = styled(SafeAreaView)`\n  flex: 1;\n`;\n\nconst ScrollViewContainer = styled(ScrollView)`\n  /* height: 100%; */\n  background-color: green;\n`;\n","import React from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n} from 'react-native';\nimport styled from 'styled-components/native';\n// import { View } from \"../components/Themed\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport { StatusBar } from 'react-native';\n\ninterface YesScrollYesNavKeyboardAvoidProps {\n  children?: React.ReactNode;\n}\n\nexport const YesScrollYesNavKeyboardAvoid: React.FC<YesScrollYesNavKeyboardAvoidProps> = ({\n  children,\n}) => {\n  const headerHeight = useHeaderHeight();\n  const KEYBOARD_VERTICAL_OFFSET =\n    headerHeight + (StatusBar.currentHeight || 0);\n\n  return (\n    <KeyboardAvoidingViewContainer\n      nativeID=\"NoScrollKeyboardAvoid\"\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n      keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET}\n    >\n      <SafeAreaViewContainer>\n        <ScrollViewContainer>{children}</ScrollViewContainer>\n      </SafeAreaViewContainer>\n    </KeyboardAvoidingViewContainer>\n  );\n};\n\nconst KeyboardAvoidingViewContainer = styled(KeyboardAvoidingView)`\n  height: 100%;\n`;\n\nconst SafeAreaViewContainer = styled(SafeAreaView)`\n  height: 100%;\n`;\n\nconst ScrollViewContainer = styled(ScrollView)`\n  /* height: 100%; */\n  background-color: green;\n`;\n","import React from 'react';\nimport { KeyboardAvoidingView, Platform, SafeAreaView } from 'react-native';\n\ninterface NoNavNoScrollKeyboardAvoidProps {\n  children?: React.ReactNode;\n}\n\nexport const NoNavNoScrollKeyboardAvoid: React.FC<NoNavNoScrollKeyboardAvoidProps> = ({\n  children,\n}) => {\n  return (\n    <>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      >\n        <SafeAreaView>{children}</SafeAreaView>\n      </KeyboardAvoidingView>\n    </>\n  );\n};\n","import * as React from 'react';\n\n// Delete me\nexport const Thing = () => {\n  return <div>the snozzberries taste like snozzberries</div>;\n};\n\nexport * from './screen-layouts/NoNav_NoScroll_KeyboardAvoid';\nexport * from './screen-layouts/NoScroll_KeyboardAvoid';\nexport * from './screen-layouts/NoScroll_YesNav_KeyboardAvoid';\nexport * from './screen-layouts/YesScroll_YesNav_BottmButtons_KeyboardAvoid';\nexport * from './screen-layouts/YesScroll_YesNav_KeyboardAvoid';\n"],"names":["KeyboardAvoidingViewContainer","styled","KeyboardAvoidingView","SafeAreaViewContainer","SafeAreaView","bottomColor","ScrollViewContainer","ScrollView","React","behavior","Platform","OS","children","nativeID","style","flex","backgroundColor","topColor","headerHeight","useHeaderHeight","keyboardVerticalOffset","StatusBar","currentHeight","bottomFixed","undefined","contentContainerStyle","flexGrow"],"mappings":"2VA8BMA,EAAgCC,EAAOC,uBAAPD,oCAIhCE,EAAwBF,EAAOG,eAAPH,0EAGR,qBAAGI,aACO,iBCT1BL,EAAgCC,EAAOC,uBAAPD,oCAIhCE,EAAwBF,EAAOG,eAAPH,oCCQxBD,EAAgCC,EAAOC,uBAAPD,oCAIhCE,EAAwBF,EAAOG,eAAPH,+BAIxBK,EAAsBL,EAAOM,aAAPN,sECbtBD,EAAgCC,EAAOC,uBAAPD,oCAIhCE,EAAwBF,EAAOG,eAAPH,oCAIxBK,EAAsBL,EAAOM,aAAPN,yGCrCyD,mBAIjFO,gCACEA,gBAACN,wBACCO,SAA0B,QAAhBC,WAASC,GAAe,UAAY,UAE9CH,gBAACJ,sBAPPQ,2CJEyE,gBACzEA,IAAAA,SAEAP,IAAAA,mBAGEG,gBAACR,GACCa,SAAS,wBACTJ,SAA0B,QAAhBC,WAASC,GAAe,UAAY,UAE9CH,gBAACJ,gBACCU,MAAO,CAAEC,KAAM,EAAGC,kBATxBC,UASqD,iBAEjDT,gBAACL,GAAsBE,YAAaA,GACjCO,yCCb8E,gBACrFA,IAAAA,SAEMM,EAAeC,2BAKnBX,gBAACR,GACCa,SAAS,wBACTJ,SAA0B,QAAhBC,WAASC,GAAe,UAAY,SAC9CS,uBANFF,GAAgBG,YAAUC,eAAiB,IAQzCd,gBAACL,OAAuBS,mBIrBT,kBACZJ,0HHa0G,gBACjHI,IAAAA,SACAW,IAAAA,YAEML,EAAeC,2BAKnBX,gBAACR,GACCa,SAAS,wBACTJ,SAA0B,QAAhBC,WAASC,GAAe,eAAYa,EAC9CJ,uBANFF,GAAgBG,YAAUC,eAAiB,IAQzCd,gBAACL,OACCK,gBAACF,GAAoBmB,sBAAuB,CAAEC,SAAU,IACrDd,IAGJW,yCCpBkF,gBACvFX,IAAAA,SAEMM,EAAeC,2BAKnBX,gBAACR,GACCa,SAAS,wBACTJ,SAA0B,QAAhBC,WAASC,GAAe,eAAYa,EAC9CJ,uBANFF,GAAgBG,YAAUC,eAAiB,IAQzCd,gBAACL,OACCK,gBAACF,OAAqBM"}